<?php
echo "Массивы. Нумерованные/ Ассоциативные";

// array
// создание пустого массива

$arr = array(); // через функцию array
$arr = [];  // через [] скобки




// нумерованные массивы
/*
индексы    0    1    2    3    4 
элементы [563, 781, 233, 771, 901]
*/
$arr = array(563, 781, 233, 771, 901);
var_dump($arr);
echo $arr; // array 
// при выводе таким способом в html выведет просто строку array, что бы вывести что то из массива нужно выводить элемент массива а не весь массив
// у массивов в PHP нет методов!!! 
// только функции для работы с ними


// обращение к элементу массива
$arrElem = $arr[3]; // 771
var_dump($arrElem);

// изменения элемента в массиве 
$arr[2] = 1000;
var_dump($arr);

$arr[20] = 2000;
var_dump($arr);

// функция ciunt возвращает колличество элеметов в массиве 
$arr_len = count($arr);
var_dump($arr_len); // 6
// в PHP все массивы ассоциативны ( пары - ключ - значение)

array_push($arr, 80000); // добавляем в конец массива элемент
var_dump($arr);

unset($arr[3]);
var_dump($arr);

$arr = [
    [34, 78, 90],
    [55, 18, 11],
    [100, 783, 490],
];

var_dump($arr[1][1]); // 18


echo "ForEach";
// перебор массива циклом foreach
// foreach (массив as значение){}

$arr = array(563, 781, 233, 771, 901);

foreach($arr as $value) {
    // на каждой итерации цикла в $value будет
    // копироваться значение элемента массива
    $value *= 2; // нельзя изменить значение массива
    var_dump($value);
}
var_dump($arr);

$lenMass = count($arr);
for ($i = 0; $i < $lenMass; $i++){
    $arr[$i] *= 2;
}
var_dump($arr);

$arr = array(4, 5, 10, 6, 3);
// начиная с версии PHP 7.0 можно изменять значения элементов массива через foreach, если передать их по ссылке &
foreach($arr as &$value){
    $value *= 2;
}
var_dump($arr);





$user_info = [
    'id' => 1,
    'login' => 'qwerty'
];

var_dump($user_info);

var_dump($user_info['id']); // 1
var_dump($user_info['login']); // qwerty

$user_info['pwd'] = '12rrt'; // добавили пару ключ-значение 
// ключ - pwd значение 12rrt
var_dump($user_info);

foreach ($user_info as $value){
    var_dump($value);
}

foreach ($user_info as $key => $value){
    // на каждой итерации в $key копируется значение ключа, в $value копируеться значение, соответсвующие данному ключу
    var_dump($key . ' : ' . $value);
}

$arr = [
    true => 'true', // 1  => 'true'
    null => 0, // '' => 0 перезапишет 56 c ключа на 117 строчке
    34 => 11111, // 34 => 11111
    'hello' => 121, // hello
    // [1, 5, 9] = > [ 12, 89 ], // ERROR
    '' => 56, // '' => 56
    45.78 => 78
];

// строки, содержащие целое число преобразуются к  integer '67' - 67

// числа с плавующей точкой преобразуются к integer ( будет отброшена дробная часть)
// тип boolean преобразуется к integer
// null преобразуеться к пустой строке

//  массивы и объекты нельзя использовать в качестве ключей

// если ключи дублируются то они перезаписываются 
// в нормальном ввиде в массивах в качестве ключей могут быть либо INT либо string

var_dump($arr);

array_push($arr, 900000); // 46 (45+1) => 900000
var_dump($arr);

// альтернативный синтаксис

// foreach ($arr as $key => $value):
//     тело цикла;
// endforeach;